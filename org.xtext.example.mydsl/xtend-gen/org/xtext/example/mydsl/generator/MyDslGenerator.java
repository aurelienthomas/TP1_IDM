/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.generator;

import java.util.function.Consumer;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import tP1_IDM.State;
import tP1_IDM.StateMachine;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package org.xtext.example.mydsl.generator;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public abstract class State {");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String name;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Transition to;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Transition from;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void State();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void State(String name, Transtion to, Transtion from);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setName(String name);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getName();");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    fsa.generateFile("State.java", _builder);
    EObject _get = resource.getContents().get(0);
    StateMachine myfsm = ((StateMachine) _get);
    final Consumer<State> _function = (State s) -> {
      String _name = s.getName();
      String _plus = (_name + ".java");
      fsa.generateFile(_plus, this.print(s));
    };
    myfsm.getState().forEach(_function);
  }
  
  public CharSequence print(final State s) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package org.xtext.example.mydsl.generator;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class ");
    String _name = s.getName();
    _builder.append(_name);
    _builder.append(" extends State {");
    _builder.newLineIfNotEmpty();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
